generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  email         String    @unique
  active        Int?      @default(1)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profileId     Int
  verified      Int?      @default(0)
  verifiedToken String?
  lastname      String
  name          String
  address       String?
  country       String    @default("EC")
  middlename    String
  phone         String?   @db.VarChar(10)
  postCode      String?
  Payment       Payment[]
  profile       Profile   @relation(fields: [profileId], references: [id])
}

model Profile {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  active      Int?          @default(1)
  roles       ProfileRole[]
  users       User[]
}

model Role {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  active      Int?          @default(1)
  profiles    ProfileRole[]
  roleDetails RoleDetail[]
}

model RoleDetail {
  id     Int    @id @default(autoincrement())
  roleId Int
  entity String
  active Int?   @default(1)
  role   Role   @relation(fields: [roleId], references: [id])

  @@unique([roleId, entity])
}

model ProfileRole {
  id         Int      @id @default(autoincrement())
  profileId  Int
  roleId     Int
  assignedAt DateTime @default(now())
  profile    Profile  @relation(fields: [profileId], references: [id])
  role       Role     @relation(fields: [roleId], references: [id])
}

model Param {
  id     Int    @id @default(autoincrement())
  key    String @unique
  value  String
  active Int?   @default(1)
}

model Debt {
  id                    Int           @id @default(autoincrement())
  titleName             String?
  liquidationCode       String
  debtDate              DateTime
  shopperName           String
  identification        Int?
  courtCosts            Int?
  localCode             String
  plotId                Int
  actionLiquidationType Int
  liquidationState      Int
  year                  Int
  surcharge             Float?        @default(0)
  discount              Float?        @default(0)
  interest              Float?        @default(0)
  coercive              Float?        @default(0)
  totalAmount           Float
  createdAt             DateTime      @default(now())
  liquidationId         Int
  Payment               Payment[]
  Transaction           Transaction[]
}

model Payment {
  id             Int             @id @default(autoincrement())
  customerId     Int
  cashier        Int             @default(30)
  createdAt      DateTime        @default(now())
  debtId         Int
  ipSession      String?
  macAddressUser String?
  observation    String?
  paymentDate    DateTime        @default(now())
  receiptNumber  String          @unique
  customer       User            @relation(fields: [customerId], references: [id])
  debt           Debt            @relation(fields: [debtId], references: [id])
  PaymentDetail  PaymentDetail[]
  Transaction    Transaction[]
}

model PaymentDetail {
  id                 Int      @id @default(autoincrement())
  paymentId          Int
  bank_id            Int
  cardNumber         String   @db.VarChar
  cardExpirationDate String   @db.VarChar
  cardAuthorization  String   @db.VarChar
  cardVoucherNumber  String   @db.VarChar
  cardHolderName     String   @db.VarChar
  message            String
  createdAt          DateTime @default(now())
  payment            Payment  @relation(fields: [paymentId], references: [id])
}

model Transaction {
  id         String  @id @unique
  state      String
  checkoutId String?
  debtId     Int
  paymentId  Int
  debt       Debt    @relation(fields: [debtId], references: [id])
  payment    Payment @relation(fields: [paymentId], references: [id])
}

model Entity {
  name        String  @unique
  description String?
  active      Int?    @default(1)
  id          Int     @id @default(autoincrement())
}
